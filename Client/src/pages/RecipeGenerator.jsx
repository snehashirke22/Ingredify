import React, { useState } from "react";
import axios from "axios";
import "../styles/RecipeGenerator.css";
import { FaWandMagicSparkles } from "react-icons/fa6";


const RecipeGenerator = () => {
  const [ingredients, setIngredients] = useState("");
  const [mealType, setMealType] = useState("Breakfast");
  const [cuisine, setCuisine] = useState("North Indian");
  const [dietary, setDietary] = useState("None");
  const [cookingTime, setCookingTime] = useState(30);
  const [recipe, setRecipe] = useState(null);
  const [loading, setLoading] = useState(false);

  const dietaryOptions = ["None", "Dairy-free", "Gluten-free", "Non-vegetarian", "Vegetarian", "Vegan"];
  const mealTypes = ["Breakfast", "Lunch", "Dinner", "Drinks", "Dessert"];
  const cuisineTypes = ["Indian", "Chinese", "Mexican", "Italian"];
  const cookingTimes = [15, 30, 45, 60];

  const handleGenerateRecipe = async () => {
    setLoading(true);
    setRecipe(null); // Clear previous recipe

    try {
      const response = await axios.post("http://localhost:5000/api/generate-recipe", {
        ingredients,
        mealType,
        cuisine,
        dietary,
        cookingTime,
      });

      setRecipe(response.data);
    } catch (error) {
      console.error("Error generating recipe:", error);
    }
    
    setLoading(false);
  };

  return (
    <div className="generate-recipe-container">
      <h2 className="generate-recipe-page-headings">Generate a Recipe</h2>
      <p className="generate-recipe-page-headings">Turn your ingredients into delicious recipes!</p>
      <div className="form-container">
        <div className="form-left">
          <label>Ingredients:</label>
          <textarea
            value={ingredients}
            rows={5}
            onChange={(e) => setIngredients(e.target.value)}
            placeholder="Enter ingredients separated by commas..."
            className="inputs"
          />
        </div>
        <div className="form-right">
          <label>Meal Type:</label>
          <select value={mealType} onChange={(e) => setMealType(e.target.value)} className="inputs"
          >
            {mealTypes.map((type) => (
              <option key={type} value={type}>{type}</option>
            ))}
          </select>

          <label>Cuisine Type:</label>
          <select value={cuisine} onChange={(e) => setCuisine(e.target.value)} className="inputs">
            {cuisineTypes.map((type) => (
              <option key={type} value={type}>{type}</option>
            ))}
          </select>

          <label>Dietary Preferences:</label>
          <select value={dietary} onChange={(e) => setDietary(e.target.value)} className="inputs">
            {dietaryOptions.map((option) => (
              <option key={option} value={option}>{option}</option>
            ))}
          </select>

          <label>Cooking Time (mins):</label>
          <select value={cookingTime} onChange={(e) => setCookingTime(Number(e.target.value))} className="inputs">
            {cookingTimes.map((time) => (
              <option key={time} value={time}>{time} mins</option>
            ))}
          </select>
        </div>
      
      </div>
      <button className="recipe-generate-button" onClick={handleGenerateRecipe} disabled={loading}>
      <FaWandMagicSparkles /> {loading ? "Generating..." : "Generate Recipe"}
      </button>

      {recipe && (
        <div className="recipe-result">
          <h2>{recipe.title || "Recipe Title"}</h2>
          {recipe.image && <img src={recipe.image} alt={recipe.title} className="generate-recipe-image" />}
          <p><strong>Cooking Time:</strong> {recipe.cookingTime || "N/A"}</p>
          <p><strong>No. Of Servings:</strong> {recipe.portions || "N/A"}</p>
          <h3>Ingredients</h3>
          <ul>
            {recipe.ingredients?.length ? recipe.ingredients.map((ing, index) => (
              <li key={index}>{ing}</li>
            )) : <p>No ingredients available.</p>}
          </ul>
          <h3>Instructions</h3>
          <ol>
            {recipe.instructions?.length ? recipe.instructions.map((step, index) => (
              <li key={index}>{step}</li>
            )) : <p>No instructions provided.</p>}
          </ol>
          
          <div className="note-box">
      <strong style={{color: '#92400e'}}>Note:</strong> ⚠️This recipe was generated by AI and may contain inaccuracies. 
      Please use your judgment and verify ingredients and instructions before cooking.
    </div>

        </div>
      )}
    </div>
  );
};

export default RecipeGenerator;
